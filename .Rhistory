knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE)
library(tidyverse)
np_trails <- read_csv(here::here("national_park_trails.csv"))
View(np_trails)
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE)
library(tidyverse)
np_trails <- read_csv(here::here("national_park_trails.csv"))
np_trails
np_trails %>%
head()
library(DT)
np_trails %>%
datatable()
np_trails %>%
head(n = 100) %>%
datatable()
install.packages("formattable")
library(formattable)
np_trails %>%
head(n = 100) %>%
formattable()
np_trails %>%
head(n = 3) %>%
formattable()
%>%
np_trails %>%
head(n = 3)
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame() %>%
slice_max(n) %>%
pull(area_name)
np_trails %>%
filter(avg_rating == 5)
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count()
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame() %>%
slice_max(n)
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame() %>%
slice_max(n) %>%
pull(area_name, n)
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame() %>%
slice_max(n) %>%
pull(n, area_name)
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame() %>%
slice_max(n = 5) %>%
pull(n, area_name)
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame() %>%
slice_max(n = 5)
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame()
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame() %>%
slice_max(n)
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame() %>%
slice_max(n, n = 5) %>%
pull(n, area_name)
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame() %>%
slice_max(n, n = 5)
%>%
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame() %>%
slice_max(n, n = 5)
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame() %>%
slice_max(n, n = 5)
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count()
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame()
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame() %>%
slice_max(n, n = 5)
np_trails %>%
filter(avg_rating == 5) %>%
group_by(area_name) %>%
count() %>%
as.data.frame() %>%
slice_max(n, n = 5) %>%
rename(number_of_trails = n)
np_trails %>%
mutate(length_miles = length / 1609.34) %>%
slice_max(length_miles, n = 3) %>%
pull(length_miles, name)
np_trails %>%
mutate(length_miles = length / 1609.34) %>%
slice_max(length_miles, n = 3) %>%
pull(length_miles, name)
np_trails %>%
mutate(length_miles = length / 1609.34) %>%
slice_max(length_miles, n = 3)
np_trails %>%
mutate(length_miles = length / 1609.34) %>%
slice_max(length_miles, n = 3) %>%
pull(length_miles, name)
np_trails %>%
group_by(area_name) %>%
slice_max(popularity) %>%
pull(name, area_name)
np_trails %>%
group_by(area_name) %>%
slice_max(popularity)
np_trails %>%
filter(state_name == "California")
np_trails %>%
filter(state_name == "California") %>%
slice_max(difficulty_rating)
np_trails %>%
filter(state_name == "California") %>%
slice_max(difficulty_rating) %>%
slice_max(elevation_gain)
np_trails %>%
filter(state_name == "California") %>%
slice_max(difficulty_rating) %>%
slice_max(elevation_gain) %>%
pull(name, elevation_gain)
np_trails %>%
distinct(area_name) %>%
pull(area_name) %>%
str_detect("Canyon") %>%
sum()
np_trails %>%
distinct(area_name) %>%
pull(area_name) %>%
str_detect("Canyon") %>%
sum()
```{r}
all_words <- np_trails %>%
pull(name) %>%
str_c(collapse = " ") %>%
str_to_lower() %>%
str_split(" ") %>%
as.data.frame(col.names = "single_word")
all_words <- all_words %>%
filter(single_word != "trail",
single_word != "to",
single_word != "loop",
single_word != "and",
single_word != "via",
)
all_words %>%
group_by(single_word) %>%
count(sort = TRUE) %>%
as.data.frame() %>%
slice_max(n, n = 5) %>%
pull(single_word)
#Function takes the dataset and the national park as required arguments.
#Optional arguments are the minimum and maximum trail length in miles, the minimum rating, and the type of trail (out and back, loop, etc.)
recommend_trails <- function(dataset, park, min_len_mi = 0,
max_len_mi = NULL, min_rating = 0, type = NULL){
stopifnot(is.data.frame(dataset),
is.character(park),
is.numeric(min_len_mi),
is.numeric(max_len_mi) | is.null(max_len_mi),
is.numeric(min_rating),
is.character(type) | is.null(type)
)
dataset <- dataset %>%
mutate(length_miles = length / 1609.34)
dataset <- dataset %>%
filter(area_name == park,
length_miles >= min_len_mi,
avg_rating >= min_rating)
if (is.null(max_len_mi)) {
dataset <- dataset
} else if (is.numeric(max_len_mi)) {
dataset <- dataset %>%
filter(length_miles <= max_len_mi)
}
if (is.null(type)) {
dataset <- dataset
} else if (is.character(type)) {
dataset <- dataset %>%
filter(route_type == type)
}
dataset %>%
pull(name)
}
#Test the function
np_trails %>%
recommend_trails("Yellowstone National Park",
min_len_mi = 10,
min_rating = 4,
type = "loop")
np_trails %>%
recommend_trails("Sequoia National Parl",
min_len_mi = 8,
min_rating = 4.7,
type = "out and back")
np_trails %>%
recommend_trails("Sequoia National Parl",
min_len_mi = 8,
min_rating = 4.7,
type = "point to point")
np_trails %>%
recommend_trails("Sequoia National Park",
min_len_mi = 8,
min_rating = 4.7,
type = "point to point")
np_trails %>%
recommend_trails("Redwood National Park",
min_len_mi = 8,
min_rating = 4.7,
type = "point to point")
np_trails %>%
recommend_trails("Redwood National Park",
min_len_mi = 5,
min_rating = 4,
type = "point to point")
np_trails %>%
recommend_trails("Redwood National Park",
min_len_mi = 2,
min_rating = 4,
type = "point to point")
np_trails %>%
recommend_trails("Redwood National Park",
min_len_mi = 2,
min_rating = 4,
type = "out and back")
np_trails %>%
recommend_trails("Redwood National Park",
min_len_mi = 5,
min_rating = 4,
type = "out and back")
np_trails %>%
recommend_trails("Redwood National Park",
min_len_mi = 5,
min_rating = 4.6,
type = "out and back")
np_trails %>%
recommend_trails("Redwood National Park",
min_len_mi = 5,
min_rating = 4.3,
type = "out and back")
np_trails %>%
recommend_trails("Redwood National Park",
min_len_mi = 5,
min_rating = 4.4,
type = "out and back")
np_trails %>%
recommend_trails("Redwood National Park",
min_len_mi = 5,
min_rating = 4.6,
type = "out and back")
np_trails %>%
recommend_trails("Redwood National Park",
min_len_mi = 5,
min_rating = 4.5,
type = "out and back")
np_trails %>%
recommend_trails("Redwood National Park",
min_len_mi = 5,
min_rating = 4.55,
type = "out and back")
np_trails %>%
recommend_trails("Redwood National Park",
min_len_mi = 5,
min_rating = 4.53,
type = "out and back")
np_trails %>%
recommend_trails("Redwood National Park",
min_len_mi = 5,
min_rating = 4.52,
type = "out and back")
np_trails %>%
recommend_trails("Redwood National Park",
min_len_mi = 5,
min_rating = 4.5,
type = "out and back")
np_trails %>%
distinct(area_name) %>%
pull(area_name) %>%
str_detect("Canyon") %>%
sum()
